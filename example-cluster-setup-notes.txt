=== Setting up an OpenShift 3.11 Cluster and Loading Migration CRDs ===

-------------------------------------------------
Part 1: origin3-dev initial setup - do this once
-------------------------------------------------

You'll need Ansible 2.7.5+ to run the origin3-dev Ansible Playbooks.
You can get Ansible through python's pip package manager or through a system package manager.
https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html

If configuring an AWS instance, boto and boto3 python packages are also required.
Without these packages, Ansible won't be able to communicate with AWS APIs.
origin3-dev will try to install boto and boto3 automatically, using pip on non Red Hat distros:
https://github.com/fusor/origin3-dev/blob/master/ansible/roles/ec2_provision/tasks/main.yml#L1-L44

---

# Clone the origin3-dev repo, which contains Ansible for creating 3.7-3.11 clusters
git clone https://github.com/fusor/origin3-dev

# Switch into the newly cloned origin3-dev dir
cd origin3-dev

# Copy the sample config file "config.yml.example" over to a version that you will edit "config.yml"
cp config.yml.example config.yml

# Edit the config file, changing options as desired
# (the defaults in this file will deploy to AWS in us-east-1 with the libra SSH key)
# (if you want to run locally instead of on AWS, change ec2_install from "true" to "false")
vim config.yml

# Ensure that you have libra.pem in an expected location (e.g. ~/.ssh/libra.pem)
# and with appropriate chmod permissions. If you need libra.pem, ask one of us for it.
cp libra.pem ~/.ssh/libra.pem
chmod 0600 ~/.ssh/libra.pem

-----------------------------------------------------
Part 2: origin3-dev cluster creation and termination
-----------------------------------------------------

After installing the prerequisites mentioned above, you can create and destroy clusters easily with ocp3-dev

---

# Edit the config file if desired before launching the cluster
vim config.yml

# Ensure that you have AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables set
# to valid AWS credentials. To save time, you can put these export statements into a file and
# source the file before creating or destroying AWS clusters.
export AWS_ACCESS_KEY_ID="ABCDE..."
export AWS_SECRET_ACCESS_KEY="jkJoSdfF..."

# Run the "deploy.yml" playbook to create a cluster
ansible-playbook deploy.yml

# To stop the cluster, use the "terminate.yml" playbook.
# You may have to answer an interactive prompt during this process
ansible-playbook terminate.yml


-----------------------------------------------------
Part 3: Installing CRDs onto a cluster
-----------------------------------------------------

After you've created a cluster, you can extend the cluster API by
creating CRDs (custom resource definitions) on the cluster.

The current CRDs for migration work are available here:
https://github.com/djwhatle/migration-controller/tree/master/config/crds

We can use the "oc" (OpenShift) CLI to quickly create all of the CRDs in the above directory.
Instructions on downloading the oc CLI are available at the URL below.
https://docs.okd.io/latest/cli_reference/get_started_cli.html

---

# Clone the migration-controller repo, which contains the CRDs we want to install
git clone https://github.com/djwhatle/migration-controller.git

# Create all of the CRDs in migration-controller/config/crds
# (note: to delete CRDs, run the same command with "oc delete -f")
oc create -f migration-controller/config/crds

# Verify that CRDs were created successfully
oc get crds | grep migrations

migrationassetcollections.migrations.openshift.io                        2019-03-05T21:20:13Z
migrationclusters.migrations.openshift.io                                2019-03-05T21:20:13Z
migrationcutovers.migrations.openshift.io                                2019-03-05T21:20:13Z
migrationplans.migrations.openshift.io                                   2019-03-05T21:20:13Z
migrations.migrations.openshift.io                                       2019-03-05T21:20:13Z
migrationstorages.migrations.openshift.io                                2019-03-05T21:20:13Z

# Inspect the contents of one of the created CRDs
oc get crd migrationplans.migrations.openshift.io -o yaml
[...snip...]
    openAPIV3Schema:
      properties:
      [...]
        metadata:
          type: object
        spec:
          properties:
            destClusterRef:
              type: object
            migrationAssetCollectionRef:
              type: object
            migrationStorageRef:
              type: object
[...snip...]
